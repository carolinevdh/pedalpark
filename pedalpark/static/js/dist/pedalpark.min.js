!function(){var a=!1,b=37.790947,c=-122.393171;window.PedalParkApp=Backbone.View.extend({initialize:function(){new u;Backbone.history.start()}});var d=Backbone.Model.extend({url:function(){return"/all"}}),e=Backbone.Model.extend(),f=Backbone.Collection.extend({model:e}),g=Backbone.Model.extend({}),h=Backbone.Model.extend({url:function(){return"/near"}}),j=Backbone.Model.extend({url:function(){return"/size"}}),k=Backbone.Model.extend({url:function(){return"/update"}}),l=Backbone.Model.extend({initialize:function(){_.bindAll(this,"updateLocation","positionSuccess","positionFailure"),this.updateLocation()},updateLocation:function(){a?(this.set({success:!0,latitude:b,longitude:c}),console.log("Set fake position at ("+this.get("latitude")+", "+this.get("longitude")+").")):navigator.geolocation&&navigator.geolocation.getCurrentPosition(this.positionSuccess,this.positionFailure)},positionSuccess:function(a){this.set({success:!0,latitude:a.coords.latitude,longitude:a.coords.longitude}),console.log("Acquired position: ("+this.get("latitude")+", "+this.get("longitude")+").")},positionFailure:function(){this.set({success:!1})}}),m=Backbone.View.extend({events:{click:"clicked"},initialize:function(){_.bindAll(this,"render","clicked"),this.template=_.template($("#bikeparking-template").html())},render:function(a){index=a%9,this.$el.html(this.template({parking:this.model.toJSON()})),this.$el.children().children().children().children().first().attr("src","/static/img/marker-parking-"+index+".png")},clicked:function(){this.trigger("parking:chosen",this.model)}}),n=Backbone.View.extend({events:{"parking:chosen":"clicked"},initialize:function(){_.bindAll(this,"render"),this.template=_.template($("#bikeparkingsrow-template").html())},render:function(a,b){for(var c=0;c<a.length;c++){var d=new m({model:a[c]});this.listenTo(d,"parking:chosen",this.bubble),this.$el.append(d.$el),d.render(b+c)}},bubble:function(a){this.trigger("parking:chosen",a)}}),o=Backbone.View.extend({el:$("#bikeparkings"),initialize:function(){_.bindAll(this,"render"),this.collection.bind("reset",this.render,this)},render:function(a){this.$el.empty();for(var b=a.models.length,c=1;b>c-1;c+=2){var d=new n;this.listenTo(d,"parking:chosen",this.bubble),this.$el.append(d.$el),b>c?d.render([a.models[c-1],a.models[c]],c):d.render([a.models[c-1]])}},bubble:function(a){this.trigger("parking:chosen",a)}}),p=Backbone.View.extend({el:$("#destinationform"),events:{"submit form#frm-destination":"setDestination"},initialize:function(){_.bindAll(this,"render","setDestination"),this.template=_.template($("#destinationform-template").html())},render:function(){this.$el.html(this.template())},clear:function(){$("#destination").val("")},setDestination:function(a){a.preventDefault();var b=$("#destination").val();this.model.set("address",b)}}),q=Backbone.View.extend({el:$("#directions"),panel:$("#directions-panel"),events:{"click #directions-button":"closePanel"},initialize:function(){this.template=_.template($("#directionspanel-template").html())},setDirections:function(a){this.render(),this.removeDirections(),a.setPanel($("#directions-panel")[0])},removeDirections:function(){this.panel.children()[0]&&this.panel.children()[0].remove()},closePanel:function(){this.removeDirections(),this.remove()},render:function(){this.$el.html(this.template())},remove:function(){this.$el.empty()}}),r=Backbone.View.extend({el:$("#map-canvas"),initialize:function(){_.bindAll(this,"redrawWithMarkers","redrawWithPath")},redrawWithMarkers:function(a,b,c,d,e,f){function g(){n=map.getCenter()}map=new google.maps.Map(this.el,{zoom:1});var h=new google.maps.LatLngBounds,j=new google.maps.LatLng(d,e);if(a){icon=c?"static/img/marker-finish.png":"static/img/marker-cyclist.png";{new google.maps.Marker({position:j,map:map,icon:icon})}h.extend(j)}var k=f.length;for(i=0;k>i;i++){{var l=new google.maps.LatLng(f[i].get("coordinates").latitude,f[i].get("coordinates").longitude);new google.maps.Marker({position:l,map:map,icon:this.getMarkerIcon(k,i+1)})}h.extend(l)}var m=new google.maps.BicyclingLayer;m.setMap(map),b&&map.setCenter(h.getCenter()),map.fitBounds(h);var n;google.maps.event.addDomListener(map,"idle",function(){g()}),google.maps.event.addDomListener(window,"resize",function(){b&&map.setCenter(n),map.fitBounds(h)})},redrawWorld:function(){function a(){b=map.getCenter()}map=new google.maps.Map(this.el,{zoom:1,center:new google.maps.LatLng(0,0)});var b;google.maps.event.addDomListener(map,"idle",function(){a()}),google.maps.event.addDomListener(window,"resize",function(){map.setCenter(b)})},redrawWithPath:function(a,b,c){map=new google.maps.Map(this.el,{});var d=new google.maps.DirectionsRenderer({suppressMarkers:!0});d.setMap(map),c.setDirections(d);{var e=new google.maps.LatLngBounds,f=new google.maps.LatLng(a[0],a[1]);new google.maps.Marker({position:f,map:map,icon:new google.maps.MarkerImage("static/img/marker-cyclist.png")})}e.extend(f);{var g=new google.maps.LatLng(b[0],b[1]);new google.maps.Marker({position:g,map:map,icon:new google.maps.MarkerImage("static/img/marker-parking.png")})}e.extend(g),map.fitBounds(e);var h=new google.maps.BicyclingLayer;h.setMap(map);var i={origin:f,destination:g,travelMode:google.maps.TravelMode.BICYCLING},j=new google.maps.DirectionsService;j.route(i,function(a,b){b==google.maps.DirectionsStatus.OK&&d.setDirections(a)})},getMarkerIcon:function(a,b){return 10>a?"static/img/marker-parking-"+b+".png":"static/img/marker-parking.png"}}),s=Backbone.View.extend({el:$("#notice"),initialize:function(){_.bindAll(this,"render"),this.template=_.template($("#notice-template").html())},render:function(a){this.$el.html(this.template({notice:a}))}}),t=Backbone.Router.extend({initialize:function(){_.bindAll(this,"onManualDestination","onLocationUpdate","manualParkingFetchSuccess","nearParkingFetchSuccess","allParkingFetchSuccess","parkingFetchError","onParkingChosen");var b=new l;this.destinationModel=new g,this.nearBikeParkingsModel=new h,this.bikeParkingsCollection=new f,this.mapView=new r,this.directionsView=new q;var c=new o({collection:this.bikeParkingsCollection});this.noticeView=new s,this.destinationView=new p({model:this.destinationModel}),this.listenTo(this.destinationModel,"change",this.onManualDestination),this.listenTo(c,"parking:chosen",this.onParkingChosen),this.listenTo(b,"change",this.onLocationUpdate),a&&this.onLocationUpdate(b)},onParkingChosen:function(a){var b=[this.nearBikeParkingsModel.get("latitude"),this.nearBikeParkingsModel.get("longitude")],c=[a.get("coordinates").latitude,a.get("coordinates").longitude];this.mapView.redrawWithPath(b,c,this.directionsView)},onLocationUpdate:function(a){if(a.get("success"))this.nearBikeParkingsModel.fetch({data:{lat:a.get("latitude"),"long":a.get("longitude"),limit:4},success:this.nearParkingFetchSuccess,error:this.parkingFetchError});else{var b=new d;b.fetch({success:this.allParkingFetchSuccess,error:this.parkingFetchError})}},nearParkingFetchSuccess:function(a){a.get("success")?(this.noticeView.render("Hi! Here are some bicycle parkings, close to your current location. Pick one to get directions."),this.destinationView.render(),this.bikeParkingsCollection.reset(a.get("locations")),this.mapView.redrawWithMarkers(!0,!0,!1,a.get("latitude"),a.get("longitude"),this.bikeParkingsCollection.models)):this.parkingFetchError()},allParkingFetchSuccess:function(a){if(a.get("success")){this.noticeView.render("Oops, we couldn't find your location. Either way, here are all bicycle parkings in San Francisco! Please enable location awareness in your browser."),this.destinationView.render();var b=new f;b.reset(a.get("locations")),this.mapView.redrawWithMarkers(!1,!0,!1,0,0,b.models)}else this.parkingFetchError()},onManualDestination:function(a){this.directionsView.closePanel(),this.nearBikeParkingsModel.fetch({data:{address:a.get("address"),limit:4},success:this.manualParkingFetchSuccess,error:this.parkingFetchError})},manualParkingFetchSuccess:function(a){a.get("success")?(this.noticeView.render("Great! Here are some bicycle parkings, close to "+a.get("address")+". Pick one to get directions."),this.bikeParkingsCollection.reset(a.get("locations")),this.mapView.redrawWithMarkers(!0,!0,!0,a.get("latitude"),a.get("longitude"),this.bikeParkingsCollection.models),this.destinationView.clear()):this.addressGeocodeError(this.destinationModel.get("address"))},addressGeocodeError:function(a){this.noticeView.render(a.length>0?"Oops, we have no idea where "+a+" is. Could you rephrase, please?":"Oops, you didn't provide any address. Try again?"),this.destinationView.clear()},parkingFetchError:function(){this.noticeView.render("Oops, we couldn	 find any bicycle parkings, nor your location. Please enable location awareness in your browser."),this.destinationView.render(),this.mapView.renderWorld()}}),u=Backbone.Router.extend({initialize:function(){_.bindAll(this,"onSizeReceived","onUpdateSuccess","onUpdateError"),this.mapView=new r,this.mapView.redrawWorld(),this.mapView.render(),this.noticeView=new s,this.noticeView.render("Loading parking locations, please hang on to your handlebars.");var a=new j;a.fetch({success:this.onSizeReceived})},onSizeReceived:function(a){if(a.get("size")<=0){var b=new k;b.fetch({success:this.onUpdateSuccess,error:this.onUpdateError})}else{new t}},onUpdateSuccess:function(a){if(a.get("size")<=0)this.onUpdateError();else{new t}},onUpdateError:function(){this.noticeView.render("Uh-oh. It looks like the server has a flat. Unfortunately, PedalPark is not going to work now.")}})}();