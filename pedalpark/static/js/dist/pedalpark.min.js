!function(){var a=!1,b=37.790947,c=-122.393171;window.PedalParkApp=Backbone.View.extend({initialize:function(){new v}});var d=Backbone.Model.extend({url:function(){return"/all"}}),e=Backbone.Model.extend(),f=Backbone.Collection.extend({model:e}),g=Backbone.Model.extend({}),h=Backbone.Model.extend({url:function(){return"/near"}}),j=Backbone.Model.extend({url:function(){return"/size"}}),k=Backbone.Model.extend({url:function(){return"/update"}}),l=Backbone.Model.extend({initialize:function(){_.bindAll(this,"updateLocation","positionSuccess","positionFailure"),this.updateLocation()},updateLocation:function(){a?this.set({success:!0,latitude:b,longitude:c}):navigator.geolocation&&navigator.geolocation.getCurrentPosition(this.positionSuccess,this.positionFailure)},positionSuccess:function(a){this.set({success:!0,latitude:a.coords.latitude,longitude:a.coords.longitude})},positionFailure:function(){this.set({success:!1})}}),m=Backbone.View.extend({events:{click:"clicked"},initialize:function(){_.bindAll(this,"render","clicked"),this.template=_.template($("#bikeparking-template").html())},render:function(a){var b=a%9;this.$el.html(this.template({parking:this.model.toJSON()})),this.$el.children().children().children().children().first().attr("src","/static/img/marker-parking-"+b+".png")},clicked:function(){this.trigger("parking:chosen",this.model)}}),n=Backbone.View.extend({events:{"parking:chosen":"clicked"},initialize:function(){_.bindAll(this,"render"),this.template=_.template($("#bikeparkingsrow-template").html())},render:function(a,b){for(var c=0;c<a.length;c++){var d=new m({model:a[c]});this.listenTo(d,"parking:chosen",this.bubble),this.$el.append(d.$el),d.render(b+c)}},bubble:function(a){this.trigger("parking:chosen",a)}}),o=Backbone.View.extend({el:$("#bikeparkings"),initialize:function(){_.bindAll(this,"render"),this.collection.bind("reset",this.render,this)},render:function(a){this.$el.empty();for(var b=a.models.length,c=1;b>c-1;c+=2){var d=new n;this.listenTo(d,"parking:chosen",this.bubble),this.$el.append(d.$el),b>c?d.render([a.models[c-1],a.models[c]],c):d.render([a.models[c-1]])}},bubble:function(a){this.trigger("parking:chosen",a)}}),p=Backbone.View.extend({el:$("#destinationform"),events:{"submit form#frm-destination":"setDestination","click #locateme-button":"calculateLocation"},initialize:function(){_.bindAll(this,"render","setDestination"),this.template=_.template($("#destinationform-template").html())},render:function(){this.$el.html(this.template())},clear:function(){$("#destination").val("")},setDestination:function(a){a.preventDefault();var b=$("#destination").val();this.model.set("address",b)},calculateLocation:function(){this.trigger("location:calculate")}}),q=Backbone.View.extend({el:$("#directions"),panel:$("#directions-panel"),events:{"click #directions-button":"closeBtn"},initialize:function(){this.template=_.template($("#directionspanel-template").html())},setDirections:function(a){this.$el.html(this.template()),a.setPanel($("#directions-panel")[0])},removeDirections:function(){this.$el.empty()},closeBtn:function(){this.trigger("close")}}),r=Backbone.View.extend({el:$("#map-canvas"),initialize:function(){function a(){b=map.getCenter()}_.bindAll(this,"renderLocations","renderForPath"),map=this.getNewMap({}),this.markers=[],bounds=new google.maps.LatLngBounds;var b;google.maps.event.addDomListener(map,"idle",function(){a()}),google.maps.event.addDomListener(window,"resize",function(){map.setCenter(b),bounds.isEmpty()||map.fitBounds(bounds)})},getNewMap:function(a){var b=new google.maps.Map(this.el,a),c=new google.maps.BicyclingLayer;return c.setMap(b),b},renderLocations:function(a,b,c,d){if(bounds=new google.maps.LatLngBounds,a){var e=new google.maps.LatLng(b,c),f=new google.maps.Marker({position:e,map:map,icon:this.getStartMarkerIcon()});this.markers.push(f),bounds.extend(e)}var g=d.length;for(i=0;g>i;i++){var h=new google.maps.LatLng(d[i].get("coordinates").latitude,d[i].get("coordinates").longitude),j=new google.maps.Marker({position:h,map:map,icon:this.getParkingMarkerIcon(g,i+1)});this.markers.push(j),bounds.extend(h)}map.setCenter(bounds.getCenter()),map.fitBounds(bounds)},renderWorld:function(){map=this.getNewMap({zoom:1,center:new google.maps.LatLng(0,0)})},renderForPath:function(a,b,c){map=this.getNewMap({}),bounds=new google.maps.LatLngBounds;var d=new google.maps.Marker({position:a,map:map,icon:this.getStartMarkerIcon(!1)});this.markers.push(d),bounds.extend(a);var e=new google.maps.Marker({position:b,map:map,icon:this.getDefaultParkingMarkerIcon()});this.markers.push(e),bounds.extend(b),map.setCenter(bounds.getCenter()),map.fitBounds(bounds),c.setMap(map)},clearOverlays:function(a){void 0!==a&&a.setMap(null),this.removeMarkers()},removeMarkers:function(){for(var a=0;a<this.markers.length;a++)this.markers[a].setMap(null);this.markers.length=0},getStartMarkerIcon:function(){return"static/img/marker-cyclist.png"},getParkingMarkerIcon:function(a,b){return 10>a?"static/img/marker-parking-"+b+".png":this.getDefaultParkingMarkerIcon()},getDefaultParkingMarkerIcon:function(){return"static/img/marker-parking.png"}}),s=Backbone.View.extend({initialize:function(){_.bindAll(this,"renderLocations","onRouteReceived","restoreLocations"),this.mapView=new r,this.mapView.renderWorld(),this.directionsView=new q,this.listenTo(this.directionsView,"close",this.restoreLocations)},renderWorld:function(){this.mapView.renderWorld()},renderLocations:function(a,b,c,d){this.latitude=b,this.longitude=c,this.locations=d,this.mapView.renderLocations(!0,this.latitude,this.longitude,this.locations)},renderDirections:function(a,b){var c={origin:new google.maps.LatLng(a[0],a[1]),destination:new google.maps.LatLng(b[0],b[1]),travelMode:google.maps.TravelMode.BICYCLING},d=new google.maps.DirectionsService;d.route(c,this.onRouteReceived)},removeDirections:function(){this.directionsView.removeDirections()},removeMapOverlays:function(){this.mapView.clearOverlays(this.renderer)},onRouteReceived:function(a,b){if(b===google.maps.DirectionsStatus.OK){this.renderer=new google.maps.DirectionsRenderer({suppressMarkers:!0});var c=a.routes[0].legs[0].start_location,d=a.routes[0].legs[0].end_location;this.mapView.renderForPath(c,d,this.renderer),this.directionsView.setDirections(this.renderer),this.renderer.setDirections(a)}},restoreLocations:function(){this.removeDirections(),this.removeMapOverlays(),this.mapView.renderLocations(!0,this.latitude,this.longitude,this.locations)}}),t=Backbone.View.extend({el:$("#notice"),initialize:function(){_.bindAll(this,"render"),this.template=_.template($("#notice-template").html())},render:function(a){this.$el.html(this.template({notice:a}))}}),u=Backbone.Router.extend({initialize:function(){_.bindAll(this,"onManualDestination","onLocationUpdate","manualParkingFetchSuccess","nearParkingFetchSuccess","allParkingFetchSuccess","parkingFetchError","onParkingChosen");var b=new l;this.destinationModel=new g,this.nearBikeParkingsModel=new h,this.bikeParkingsCollection=new f,this.navigationView=new s;var c=new o({collection:this.bikeParkingsCollection});this.noticeView=new t,this.destinationView=new p({model:this.destinationModel}),this.listenTo(b,"change",this.onLocationUpdate),this.listenTo(this.destinationView,"location:calculate",function(){b.updateLocation()}),this.listenTo(this.destinationModel,"change",this.onManualDestination),this.listenTo(c,"parking:chosen",this.onParkingChosen),a&&this.onLocationUpdate(b)},onParkingChosen:function(a){var b=[this.nearBikeParkingsModel.get("latitude"),this.nearBikeParkingsModel.get("longitude")],c=[a.get("coordinates").latitude,a.get("coordinates").longitude];this.navigationView.renderDirections(b,c)},onLocationUpdate:function(a){if(this.navigationView.removeMapOverlays(),this.navigationView.removeDirections(),a.get("success"))this.nearBikeParkingsModel.fetch({data:{lat:a.get("latitude"),"long":a.get("longitude"),limit:4},success:this.nearParkingFetchSuccess,error:this.parkingFetchError});else{var b=new d;b.fetch({success:this.allParkingFetchSuccess,error:this.parkingFetchError})}},nearParkingFetchSuccess:function(a){a.get("success")?(this.noticeView.render("Hi! Here are some bicycle parkings, close to your current location. Pick one to get directions."),this.destinationView.render(),this.bikeParkingsCollection.reset(a.get("locations")),this.navigationView.renderLocations(!0,a.get("latitude"),a.get("longitude"),this.bikeParkingsCollection.models)):this.parkingFetchError()},allParkingFetchSuccess:function(a){if(a.get("success")){this.noticeView.render("Oops, we couldn't find your location. Either way, here are all bicycle parkings in San Francisco!Please enable location awareness in your browser."),this.destinationView.render();var b=new f;b.reset(a.get("locations")),this.navigationView.renderLocations(!1,0,0,b.models)}else this.parkingFetchError()},onManualDestination:function(a){this.navigationView.removeDirections(),this.navigationView.removeMapOverlays(),this.nearBikeParkingsModel.fetch({data:{address:a.get("address"),limit:4},success:this.manualParkingFetchSuccess,error:this.parkingFetchError})},manualParkingFetchSuccess:function(a){a.get("success")?(this.noticeView.render("Great! Here are some bicycle parkings, close to "+a.get("address")+". Pick one to get directions."),this.bikeParkingsCollection.reset(a.get("locations")),this.navigationView.renderLocations(!0,a.get("latitude"),a.get("longitude"),this.bikeParkingsCollection.models),this.destinationView.clear()):(this.bikeParkingsCollection.reset(),this.addressGeocodeError(this.destinationModel.get("address")))},addressGeocodeError:function(a){this.noticeView.render(a.length>0?"Oops, we have no idea where "+a+" is. Could you rephrase, please?":"Oops, you didn't provide any address. Try again?"),this.destinationView.clear()},parkingFetchError:function(){this.noticeView.render("Oops, we couldn	 find any bicycle parkings, nor your location. Please enable location awareness in your browser."),this.destinationView.render(),this.navigationView.renderWorld()}}),v=Backbone.Router.extend({initialize:function(){_.bindAll(this,"onUpdateSuccess","onUpdateError");var a=new r;a.renderWorld(),this.noticeView=new t,this.noticeView.render("Loading parking locations, please hang on to your handlebars.");var b=new j;b.fetch({success:this.onSizeReceived})},onSizeReceived:function(a){if(a.get("size")<=0){var b=new k;b.fetch({success:this.onUpdateSuccess,error:this.onUpdateError})}else{new u}},onUpdateSuccess:function(a){if(a.get("size")<=0)this.onUpdateError();else{new u}},onUpdateError:function(){this.noticeView.render("Uh-oh. It looks like the server has a flat. Unfortunately, PedalPark is not going to work now.")}})}();